// Celebrity Models Migration Script
// Migrates pre-existing celebrity models to the new face licensing database structure

// Celebrity model data
const celebrityModels = [
    {
        id: 'model_chae_001',
        name: 'Ï±ÑÏó∞',
        email: 'chae@xbrush.ai',
        phone: '010-0000-0001',
        birthDate: '1978-12-10',
        gender: 'female',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/chae.png',
        tagline: 'Ïö∞ÏïÑÌïòÍ≥† ÏÑ∏Î†®Îêú Ïù¥ÎØ∏ÏßÄ',
        introduction: 'ÎìúÎùºÎßàÏôÄ ÏòÅÌôîÏóêÏÑú ÌôúÏïΩÌïú Î≤†ÌÖåÎûë Î∞∞Ïö∞. Í≥†Í∏âÏä§ÎüΩÍ≥† Ïã†Î¢∞Í∞ê ÏûàÎäî Ïù¥ÎØ∏ÏßÄÎ°ú ÌîÑÎ¶¨ÎØ∏ÏóÑ Î∏åÎûúÎìú Í¥ëÍ≥†Ïóê Ï†ÅÌï©Ìï©ÎãàÎã§.',
        categories: ['beauty', 'fashion', 'lifestyle'],
        attributes: ['Ïö∞ÏïÑÌï®', 'Ïã†Î¢∞Í∞ê', 'Í≥†Í∏âÏä§Îü¨ÏõÄ'],
        tier: 'premium',
        sortPriority: 5000
    },
    {
        id: 'model_iu_001',
        name: 'ÏïÑÏù¥Ïú†',
        email: 'iu@xbrush.ai',
        phone: '010-0000-0002',
        birthDate: '1993-05-16',
        gender: 'female',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/2.png',
        tagline: 'ÏÇ¨ÎûëÏä§ÎüΩÍ≥† ÏπúÍ∑ºÌïú Ïù¥ÎØ∏ÏßÄ',
        introduction: 'Í∞ÄÏàò Í≤∏ Î∞∞Ïö∞Î°ú ÌôúÎèôÌïòÎ©∞ ÎåÄÏ§ëÏ†ÅÏù∏ ÏÇ¨ÎûëÏùÑ Î∞õÎäî Ïä§ÌÉÄ. Îã§ÏñëÌïú Ïó∞Î†πÏ∏µÏóêÍ≤å Ïñ¥ÌïÑÌïòÎäî ÏπúÍ∑ºÌïú Ïù¥ÎØ∏ÏßÄ.',
        categories: ['beauty', 'food', 'lifestyle'],
        attributes: ['ÏπúÍ∑ºÌï®', 'ÏÇ¨ÎûëÏä§Îü¨ÏõÄ', 'Îã§Ïû¨Îã§Îä•'],
        tier: 'vip',
        sortPriority: 9000
    },
    {
        id: 'model_ljj_001',
        name: 'Ïù¥Ï†ïÏû¨',
        email: 'ljj@xbrush.ai',
        phone: '010-0000-0003',
        birthDate: '1972-12-15',
        gender: 'male',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/3.png',
        tagline: 'Ïπ¥Î¶¨Ïä§Îßà ÏûàÎäî Ïã†ÏÇ¨Ï†Å Ïù¥ÎØ∏ÏßÄ',
        introduction: 'Ïò§ÏßïÏñ¥ Í≤åÏûÑÏúºÎ°ú ÏÑ∏Í≥ÑÏ†Å Ïä§ÌÉÄÍ∞Ä Îêú Î∞∞Ïö∞. Ï§ëÌõÑÌïòÍ≥† Ïã†Î¢∞Í∞ê ÏûàÎäî Ïù¥ÎØ∏ÏßÄÎ°ú Í∏∞ÏóÖ Í¥ëÍ≥†Ïóê Ï†ÅÌï©.',
        categories: ['corporate', 'tech', 'lifestyle'],
        attributes: ['Ïπ¥Î¶¨Ïä§Îßà', 'Ïã†Î¢∞Í∞ê', 'Í∏ÄÎ°úÎ≤å'],
        tier: 'vip',
        sortPriority: 8000
    },
    {
        id: 'model_jjh_001',
        name: 'Ï†ÑÏßÄÌòÑ',
        email: 'jjh@xbrush.ai',
        phone: '010-0000-0004',
        birthDate: '1981-10-30',
        gender: 'female',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/4.png',
        tagline: 'ÎèÑÏãúÏ†ÅÏù¥Í≥† ÏÑ∏Î†®Îêú Ïù¥ÎØ∏ÏßÄ',
        introduction: 'Î≥ÑÏóêÏÑú Ïò® Í∑∏ÎåÄÎ°ú ÏïÑÏãúÏïÑ Ï†ÑÏó≠ÏóêÏÑú ÏÇ¨ÎûëÎ∞õÎäî ÌÜ±Ïä§ÌÉÄ. Ìå®ÏÖòÍ≥º Î∑∞Ìã∞ Î∏åÎûúÎìúÏùò ÎÆ§Ï¶à.',
        categories: ['fashion', 'beauty', 'lifestyle'],
        attributes: ['ÏÑ∏Î†®Îê®', 'ÎèÑÏãúÏ†Å', 'Íµ≠Ï†úÏ†Å'],
        tier: 'premium',
        sortPriority: 6000
    },
    {
        id: 'model_psj_001',
        name: 'Î∞ïÏÑúÏ§Ä',
        email: 'psj@xbrush.ai',
        phone: '010-0000-0005',
        birthDate: '1988-12-16',
        gender: 'male',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/5.png',
        tagline: 'Í±¥Í∞ïÌïòÍ≥† ÌôúÎèôÏ†ÅÏù∏ Ïù¥ÎØ∏ÏßÄ',
        introduction: 'Ïù¥ÌÉúÏõê ÌÅ¥ÎùºÏì∞Î°ú ÌÅ∞ ÏÇ¨ÎûëÏùÑ Î∞õÏùÄ Î∞∞Ïö∞. Ï†äÍ≥† Ïó≠ÎèôÏ†ÅÏù∏ Ïù¥ÎØ∏ÏßÄÎ°ú Ïä§Ìè¨Ï∏†, Ìå®ÏÖò Î∏åÎûúÎìúÏóê Ï†ÅÌï©.',
        categories: ['sports', 'fashion', 'lifestyle'],
        attributes: ['ÌôúÎèôÏ†Å', 'Ï†äÏùå', 'Ìä∏Î†åÎîî'],
        tier: 'premium',
        sortPriority: 4000
    },
    {
        id: 'model_lsa_001',
        name: 'Ïù¥ÏÉÅÏïÑ',
        email: 'lsa@xbrush.ai',
        phone: '010-0000-0007',
        birthDate: '1972-02-15',
        gender: 'female',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/15.png', // Assuming she might be image 15
        tagline: 'ÏûêÏó∞Ïä§ÎüΩÍ≥† Ìé∏ÏïàÌïú Ïù¥ÎØ∏ÏßÄ',
        introduction: 'Ïò§Îûú Í≤ΩÎ†•Ïùò Î∞∞Ïö∞Î°ú Ìé∏ÏïàÌïòÍ≥† Ïã†Î¢∞Í∞ê ÏûàÎäî Ïù¥ÎØ∏ÏßÄ. Í∞ÄÏ°± Î∏åÎûúÎìúÏôÄ ÏÉùÌôúÏö©Ìíà Í¥ëÍ≥†Ïóê Ï†ÅÌï©.',
        categories: ['lifestyle', 'food', 'family'],
        attributes: ['Ìé∏ÏïàÌï®', 'Ïã†Î¢∞Í∞ê', 'ÏπúÍ∑ºÌï®'],
        tier: 'premium',
        sortPriority: 4500,
        sampleVideo: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/ÏïàÎèô ÏÇ¨Í≥º TVCM 18s Î≤ÑÏ†Ñ Î™®Îç∏ Ïù¥ÏÉÅÏïÑ.mp4'
    },
    {
        id: 'model_syj_001',
        name: 'ÏÜêÏòàÏßÑ',
        email: 'syj@xbrush.ai',
        phone: '010-0000-0006',
        birthDate: '1982-01-11',
        gender: 'female',
        profileImage: 'https://jpjpkimjp.github.io/xbrush_movie_MVP1/images/6.png',
        tagline: 'ÏßÄÏ†ÅÏù¥Í≥† Ïö∞ÏïÑÌïú Ïù¥ÎØ∏ÏßÄ',
        introduction: 'ÏÇ¨ÎûëÏùò Î∂àÏãúÏ∞©ÏúºÎ°ú Ï†Ñ ÏÑ∏Í≥ÑÏ†Å Ïù∏Í∏∞Î•º ÏñªÏùÄ Î∞∞Ïö∞. ÌíàÍ≤© ÏûàÍ≥† ÏßÄÏ†ÅÏù∏ Ïù¥ÎØ∏ÏßÄÎ°ú ÌîÑÎ¶¨ÎØ∏ÏóÑ Î∏åÎûúÎìúÏóê Ï†ÅÌï©.',
        categories: ['beauty', 'fashion', 'corporate'],
        attributes: ['Ïö∞ÏïÑÌï®', 'ÏßÄÏ†Å', 'ÌíàÍ≤©'],
        tier: 'premium',
        sortPriority: 5500
    }
];

// Default licensing plans for each model
const defaultLicensingPlans = [
    {
        planName: 'Ïò®ÎùºÏù∏ Î≤†Ïù¥ÏßÅ',
        usageScope: 'Ïò®ÎùºÏù∏ Í¥ëÍ≥†',
        duration: '6Í∞úÏõî',
        territory: 'Íµ≠ÎÇ¥',
        basePrice: 5000000, // 5Î∞±ÎßåÏõê (celebrities are more expensive)
        platformFee: 15,
        restrictions: 'SNS, ÏõπÏÇ¨Ïù¥Ìä∏Îßå',
        isActive: true
    },
    {
        planName: 'Ïò®ÎùºÏù∏ ÌîÑÎ¶¨ÎØ∏ÏóÑ',
        usageScope: 'Ïò®ÎùºÏù∏ Í¥ëÍ≥†',
        duration: '12Í∞úÏõî',
        territory: 'Ï†ÑÏÑ∏Í≥Ñ',
        basePrice: 15000000, // 1Ï≤ú5Î∞±ÎßåÏõê
        platformFee: 15,
        restrictions: 'Î™®Îì† Ïò®ÎùºÏù∏ Ï±ÑÎÑê',
        isActive: true
    },
    {
        planName: 'Î∞©ÏÜ° Í¥ëÍ≥†',
        usageScope: 'TV/Î∞©ÏÜ°',
        duration: '3Í∞úÏõî',
        territory: 'Íµ≠ÎÇ¥',
        basePrice: 30000000, // 3Ï≤úÎßåÏõê
        platformFee: 10,
        restrictions: 'ÏßÄÏÉÅÌåå, ÏºÄÏù¥Î∏î',
        isActive: true
    },
    {
        planName: 'Ï†ÑÏ≤¥ ÏÉÅÏóÖÏö©',
        usageScope: 'Î™®Îì† Îß§Ï≤¥',
        duration: '12Í∞úÏõî',
        territory: 'Ï†ÑÏÑ∏Í≥Ñ',
        basePrice: 50000000, // 5Ï≤úÎßåÏõê
        platformFee: 10,
        restrictions: 'Ï†úÌïú ÏóÜÏùå',
        isActive: true
    }
];

// Migration function
async function migrateCelebrityModels() {
    console.log('Starting celebrity models migration...');
    
    try {
        // Wait for Firebase to be ready
        let retries = 10;
        while (retries > 0 && (!window.firebaseDB || !window.modelStorageAdapter)) {
            console.log('Waiting for Firebase initialization...');
            await new Promise(resolve => setTimeout(resolve, 1000));
            retries--;
        }
        
        if (!window.modelStorageAdapter) {
            throw new Error('Firebase not initialized');
        }
        
        // Migrate each celebrity model
        for (const celebrity of celebrityModels) {
            console.log(`Migrating ${celebrity.name}...`);
            
            // 1. Create model record (private info)
            const modelData = {
                id: celebrity.id,
                modelId: celebrity.id,
                name: celebrity.name,
                email: celebrity.email,
                phone: celebrity.phone,
                birthDate: celebrity.birthDate,
                gender: celebrity.gender,
                kyc_status: 'verified', // Celebrities are pre-verified
                kyc_documents: {
                    id: 'verified',
                    face: 'verified',
                    video: 'verified'
                },
                bankAccount: 'Í≥ÑÏ¢åÏ†ïÎ≥¥ Î≥¥Ìò∏Îê®',
                status: 'active',
                joinedAt: new Date().toISOString(),
                
                // For backward compatibility
                personalInfo: {
                    name: celebrity.name,
                    email: celebrity.email,
                    phone: celebrity.phone,
                    birthDate: celebrity.birthDate,
                    gender: celebrity.gender,
                    intro: celebrity.tagline,
                    description: celebrity.introduction,
                    categories: celebrity.categories
                },
                
                // Profile data
                tier: celebrity.tier,
                premiumBadge: celebrity.tier === 'vip' ? 'üíé VIP Î™®Îç∏' : '‚≠ê ÌîÑÎ¶¨ÎØ∏ÏóÑ Î™®Îç∏',
                sortPriority: celebrity.sortPriority,
                
                // Portfolio
                portfolio: {
                    thumbnailUrl: celebrity.profileImage,
                    images: [celebrity.profileImage]
                },
                
                // Additional fields for compatibility
                displayName: celebrity.name,
                tagline: celebrity.tagline,
                introduction: celebrity.introduction,
                categories: celebrity.categories,
                attributes: celebrity.attributes,
                profileImage: celebrity.profileImage,
                totalLicenses: Math.floor(Math.random() * 200) + 100, // Random number for demo
                rating: (Math.random() * 0.5 + 4.5).toFixed(1), // 4.5-5.0 rating
                responseTime: 'Ï¶âÏãú Í∞ÄÎä•',
                isActive: true,
                
                // Contract (for backward compatibility)
                contract: {
                    basePrice: defaultLicensingPlans[0].basePrice,
                    currency: 'KRW'
                }
            };
            
            // Save model
            try {
                await window.modelStorageAdapter.saveModel(modelData);
                console.log(`‚úÖ Successfully migrated ${celebrity.name}`);
            } catch (error) {
                console.error(`‚ùå Failed to migrate ${celebrity.name}:`, error);
            }
        }
        
        console.log('‚ú® Celebrity models migration completed!');
        
        // Show success message
        if (typeof showToast === 'function') {
            showToast('Ïú†Î™ÖÏù∏ Î™®Îç∏ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖòÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!', 'success');
        }
        
        return true;
        
    } catch (error) {
        console.error('Migration failed:', error);
        if (typeof showToast === 'function') {
            showToast('ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', 'error');
        }
        return false;
    }
}

// Auto-run migration when script loads
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', migrateCelebrityModels);
} else {
    migrateCelebrityModels();
}

// Export for manual use
window.migrateCelebrityModels = migrateCelebrityModels;